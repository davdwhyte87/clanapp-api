{"version":3,"sources":["../app.js"],"names":["app","dotenv","config","use","bodyParser","urlencoded","extended","json","mongoose","connect","process","env","DB_URL","useNewUrlParser","req","res","next","header","generalPrefix","get","status","send","message","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;AACA;AACAC,iBAAOC,MAAP;AACA;AACAF,IAAIG,GAAJ,CAAQ,iCAAR;AACA;AACAH,IAAIG,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAN,IAAIG,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACA;AACAC,mBAASC,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,MAA7B,EAAqC,EAAEC,iBAAiB,IAAnB,EAArC;AACA;AACAb,IAAIG,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAH,IAAIG,GAAJ,CAAQ,CAACW,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAD;AACD,CALD;;AAOA;AACA,MAAME,gBAAgB,SAAtB;AACAlB,IAAImB,GAAJ,CAAQD,aAAR,EAAuB,CAACJ,GAAD,EAAMC,GAAN,KAAc;AACnCA,MAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,GAAV,EAAeE,SAAS,qBAAxB,EAArB;AACD,CAFD;;AAIAtB,IAAIG,GAAJ,CAAQ,GAAR,EAAa,CAACW,GAAD,EAAMC,GAAN,KAAcA,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC9CD,UAAQ,GADsC;AAE9CG,SAAO;AAFuC,CAArB,CAA3B;;kBAKevB,G","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\nimport expressValidator from 'express-validator';\nimport dotenv from 'dotenv';\nimport mongoose from 'mongoose';\n\nconst app = express();\n// set up dotenv\ndotenv.config();\n// set up express validator\napp.use(expressValidator());\n// set input types\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n// setup database\nmongoose.connect(process.env.DB_URL, { useNewUrlParser: true });\n// set up morgan\napp.use(morgan('dev'));\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Headers', '*');\n  res.header('Access-Control-Allow-Methods', '*');\n  next();\n});\n\n// set base endpoint\nconst generalPrefix = '/api/v1';\napp.get(generalPrefix, (req, res) => {\n  res.status(200).send({ status: 200, message: 'Welcome to clan api' });\n});\n\napp.use('*', (req, res) => res.status(404).send({\n  status: 404,\n  error: 'This route does not exist. You may navigate to the home route at api/v1',\n}));\n\nexport default app;\n"]}